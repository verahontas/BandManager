@model ReservationTableViewModel
@*
    This page gets the available rooms as model, and gets an index in ViewData["Index"]. //update: Index is a field of the model
    This Index shows how many days we scrolled further.
    Index = 0 means that we would like to render today's reservations.
    Index = 1 means that we would like to see tomorrow's reservations.
    Etc.
    Negative values are not allowed.
*@

<table class="table table-bordered table-dark">
    <tr>
        <th>terem\óra</th>
        @for (int hour = Model.OpeningHour; hour < Model.ClosingHour; ++hour)
        {
            var end = hour + 1;
            <th scope="col">@hour - @end</th>
        }
    </tr>
    @for (int i = 0; i < Model.NumberOfAvailableRooms; ++i)
    {
        <tr>
            <td>
                @Model.Rooms[i].Number . Terem
            </td>
            @for (int hour = Model.OpeningHour; hour < Model.ClosingHour; ++hour)
            {
                <td>
                    @{ bool oldCell = false; }
                    @if (Model.Index == 0) //ha a mai napot nézzük akkor lehetnek már nem foglalható időpontok
                    {
                        @if (hour <= DateTime.Now.Hour)
                        {
                            <a class="disabled">Foglalás</a>
                            oldCell = true;
                        }

                        @if (!oldCell && !Model.Reservations.Any())
                        {
                            <a asp-controller="Reservations" asp-action="CreateFromTable" asp-route-roomId="@Model.Rooms[i].Id" asp-route-hour="@hour" asp-route-dayIndex="@Model.Index">Foglalás</a>
                        }
                        else
                        {
                            bool isConflict = false;
                            @foreach (var reservation in Model.Reservations)
                            {
                                DateTime dateNow = DateTime.Now;
                                DateTime dateToCompare = new DateTime(dateNow.Year, dateNow.Month, dateNow.Day, hour, 0, 0);
                                if (!oldCell && reservation.RehearsalRoomId == Model.Rooms[i].Id && reservation.IsConflicting(dateToCompare.AddMinutes(1), dateToCompare.AddMinutes(59)))
                                {
                                    if (reservation.BandName == null)
                                    {
                                        <p>Foglalt</p>
                                    }
                                    else
                                    {
                                        <p>@reservation.BandName</p>
                                    }
                                    isConflict = true;
                                    break;
                                }
                            }
                            @if (!oldCell && !isConflict)
                            {
                                <a asp-controller="Reservations" asp-action="CreateFromTable" asp-route-roomId="@Model.Rooms[i].Id" asp-route-hour="@hour" asp-route-dayIndex="@Model.Index">Foglalás</a>
                            }
                        }
                    }
                    else //ha nem máról van szó
                    {
                        @if (!Model.Reservations.Any())
                        {
                            <a asp-controller="Reservations" asp-action="CreateFromTable" asp-route-roomId="@Model.Rooms[i].Id" asp-route-hour="@hour" asp-route-dayIndex="@Model.Index">Foglalás</a>
                        }
                        else
                        {
                            bool isConflict = false;
                            @foreach (var reservation in Model.Reservations)
                            {
                                DateTime dateOfCurrentDay = DateTime.Now.AddDays(Model.Index);
                                DateTime dateToCompare = new DateTime(dateOfCurrentDay.Year, dateOfCurrentDay.Month, dateOfCurrentDay.Day, hour, 0, 0);
                                if (reservation.RehearsalRoomId == Model.Rooms[i].Id && reservation.IsConflicting(dateToCompare.AddMinutes(1), dateToCompare.AddMinutes(59)))
                                {
                                    <p>Foglalt</p>
                                    isConflict = true;
                                    break;
                                }
                            }
                            @if (!isConflict)
                            {
                                <a asp-controller="Reservations" asp-action="CreateFromTable" asp-route-roomId="@Model.Rooms[i].Id" asp-route-hour="@hour" asp-route-dayIndex="@Model.Index">Foglalás</a>
                            }
                        }
                    }
                </td>
            }
        </tr>
    }
</table>


<!--
    WHAT IS THIS perhaps i dont need it
<td>
        @if (Model.Index < 10) //csak a következő 10 napra előre lehet foglalni
        {
            ReservationTableViewModel vm = new ReservationTableViewModel()
            {
                ClosingHour = Model.ClosingHour,
                OpeningHour = Model.OpeningHour,
                Studio = Model.Studio,
                NumberOfAvailableRooms = Model.NumberOfAvailableRooms,
                Index = Model.Index,
                Reservations = Model.Reservations,
                Rooms = Model.Rooms
            };
            <a asp-controller="RehearsalStudios" asp-action="ReservationsTable" asp-route-studioId="@Model.Studio.Id" asp-route-isNext="@true">Következő nap</a>
        }
    </td>

-->
